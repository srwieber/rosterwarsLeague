$('#roster, #roster_column_right .mobile-wrap table:first-of-type').each(function() {
  let salarycapcell = $(this).find('.salary_cap_row th').eq(1);
  let salarycapvalue = salarycapcell.html();
  let salarycapvaluenew = parseInt(salarycapvalue) - 30;
  salarycapcell.html(salarycapvaluenew);

  let irtext = $(this).find('.total_salary_row').prev().find('th').eq(0).html().replace(' Total Players on IR','');

  let capspacecell = $(this).find('.cap_room_available_row th').eq(1);
  let capspacevalue = capspacecell.html();
  let capspacevaluenew = parseInt(capspacevalue) + parseInt(irtext) - 30;
  capspacecell.html(capspacevaluenew);
});


// correction for rosters with zero players on ir, but TOS version renames salary cap row classes 
$('#roster, #roster_column_right .mobile-wrap table:first-of-type').each(function() {
let salarycapcell = $(this).find('.salary_cap_row th').eq(1);
let salarycapvalue = salarycapcell.html();
let salarycapvaluenew = parseInt(salarycapvalue) - 30;
salarycapcell.html(salarycapvaluenew);

let irtext;
if ($(this).find('.total_salary_row').prev().find('th:contains("Total Players")').length > 0) {
irtext = 0;
}else{
irtext = $(this).find('.total_salary_row').prev().find('th').eq(0).html().replace(' Total Players on IR','');
}

let capspacecell = $(this).find('.cap_room_available_row th').eq(1);
let capspacevalue = capspacecell.html();
let capspacevaluenew = parseInt(capspacevalue) + parseInt(irtext) - 30;
capspacecell.html(capspacevaluenew);
});
